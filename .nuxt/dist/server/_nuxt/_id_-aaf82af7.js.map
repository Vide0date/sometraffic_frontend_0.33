{"version":3,"file":"_id_-aaf82af7.js","sources":["../../../../pages/users/[id].vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"last-users\">\r\n      <h1 class=\"font-bold py-4 uppercase text-center\">Update User</h1>\r\n      <form v-on:submit.prevent>\r\n        <div class=\"overflow-hidden shadow sm:rounded-md\">\r\n          <div class=\"px-4 py-5 sm:p-6 w-full md:w-2/4 m-auto sm:w-full\">\r\n            <div class=\"grid grid-cols-6 gap-6\">\r\n              <div class=\"col-span-10 sm:col-span-12\">\r\n                <label\r\n                  for=\"userName\"\r\n                  class=\"block text-sm font-medium text-gray-700\"\r\n                  >First name</label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"form.userName\"\r\n                  id=\"userName\"\r\n                  class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div class=\"col-span-10 sm:col-span-12\">\r\n                <label\r\n                  for=\"email\"\r\n                  class=\"block text-sm font-medium text-gray-700\"\r\n                  >Email address</label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"form.email\"\r\n                  id=\"email\"\r\n                  class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div class=\"col-span-10 sm:col-span-12\">\r\n                <label\r\n                  for=\"password\"\r\n                  class=\"block text-sm font-medium text-gray-700\"\r\n                  >Password</label\r\n                >\r\n                <input\r\n                  type=\"password\"\r\n                  v-model=\"form.password\"\r\n                  id=\"password\"\r\n                  class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\r\n                  placeholder=\"New Password\"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"col-span-10 sm:col-span-12\">\r\n                <label\r\n                  for=\"userType\"\r\n                  class=\"block text-sm font-medium text-gray-700\"\r\n                  >User Type</label\r\n                >\r\n                <select\r\n                  id=\"userType\"\r\n                  v-model=\"form.userType\"\r\n                  autocomplete=\"userType\"\r\n                  class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 block w-full rounded-md border border-gray-300 py-2 px-3 shadow-sm focus:border-gray-800 focus:outline-none focus:ring-indigo-500 sm:text-sm\"\r\n                  required\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"Administrator\">Administrator</option>\r\n                  <option value=\"User\">User</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div class=\"col-span-10 sm:col-span-12\">\r\n                <label\r\n                  for=\"userType\"\r\n                  class=\"block text-sm font-medium text-gray-700\"\r\n                  >Account</label\r\n                >\r\n                <select\r\n                  id=\"Account\"\r\n                  v-model=\"form.AccountId\"\r\n                  autocomplete=\"Account\"\r\n                  class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 block w-full rounded-md border border-gray-300 py-2 px-3 shadow-sm focus:border-gray-800 focus:outline-none focus:ring-indigo-500 sm:text-sm\"\r\n                  required\r\n                >\r\n                  <option value=\"null\">Select</option>\r\n                  <option\r\n                    v-for=\"account in accounts\"\r\n                    :key=\"account.id\"\r\n                    :value=\"account.id\"\r\n                  >\r\n                    {{ account.name }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            class=\"px-4 py-3 text-right sm:px-6 w-full md:w-2/4 m-auto sm:w-full\"\r\n          >\r\n            <button\r\n              @click.prevent=\"updateUser\"\r\n              class=\"bg-[#bcbcbc] inline-flex justify-center rounded-md border border-transparent py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n            >\r\n              Update\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\ndefinePageMeta({\r\n  middleware: [\"auth\", \"admin\"],\r\n})\r\nconst AWN = inject(\"$awn\")\r\nconst config = useRuntimeConfig()\r\nconst { id } = await useRoute().params\r\nconst form = reactive({\r\n  id: id,\r\n  userName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  userType: \"\",\r\n  AccountId: null,\r\n})\r\nconst accounts = ref([])\r\n\r\n// fetch the product\r\nconst { data: user } = await useFetch(`${config.API_BASE_URL}users/${id}`, {\r\n  key: id,\r\n})\r\n// console.log('user value', user.value)\r\nif (user.value) {\r\n  form.id = user.value.id\r\n  form.userName = user.value.userName\r\n  form.email = user.value.email\r\n  form.userType = user.value.userType\r\n  form.AccountId = user.value.AccountId\r\n}\r\n\r\nconst updateUser = async () => {\r\n  let u_data = {\r\n    id: form.id,\r\n    userName: form.userName,\r\n    email: form.email,\r\n    password: form.password,\r\n    userType: form.userType,\r\n    AccountId: form.AccountId\r\n  }\r\n  const { data, error } = await useFetch(\r\n    `${config.API_BASE_URL}users/update/${id}`,\r\n    {\r\n      method: \"PUT\",\r\n      params: { id: id },\r\n      body: u_data,\r\n    }\r\n  )\r\n  if (data.value) {\r\n    console.log(\"data value\", data.value.message)\r\n    await AWN.success(data.value.message)\r\n    navigateTo(\"/users\")\r\n  }\r\n  if (error.value) {\r\n    await AWN.alert(error.value.statusMessage)\r\n  }\r\n  // console.log('form value', form)\r\n  // location.assign('/users')\r\n}\r\n// const { data: users } = await useFetch('http://localhost:1111/api/users/all')\r\nconst setAccounts = async () => {\r\n  const { data: data } = await useFetch(`${config.API_BASE_URL}accounts/all`)\r\n  accounts.value = data.value\r\n}\r\nonBeforeMount(setAccounts)\r\n\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"names":["_withAsyncContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAoHA,WAAA,MAAA;AACA,UAAA,SAAA,iBAAA;AACA,UAAA,EAAA,GAAA,KAAqB,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA,SAAA,EAAA,MAAA;AACrB,UAAA,OAAA,SAAA;AAAA,MACA;AAAA,MACA,UAAA;AAAA,MACA,OAAA;AAAA,MACA,UAAA;AAAA,MACA,UAAA;AAAA,MACA,WAAA;AAAA,IACA,CAAA;AACA,UAAA,WAAA,IAAA,EAAA;AAGA,UAAA,EAAA,MAAA,KAAA;MACA,KAAA;AAAA,IACA,GAAA,aAAA,CAAA;AAEA,QAAA,KAAA,OAAA;AACA,WAAA,KAAA,KAAA,MAAA;AACA,WAAA,WAAA,KAAA,MAAA;AACA,WAAA,QAAA,KAAA,MAAA;AACA,WAAA,WAAA,KAAA,MAAA;AACA,WAAA,YAAA,KAAA,MAAA;AAAA,IACA;;;;;;;;;;;;;;;;"}
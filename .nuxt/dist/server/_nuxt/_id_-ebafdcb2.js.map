{"version":3,"file":"_id_-ebafdcb2.js","sources":["../../../../pages/f/[id].vue"],"sourcesContent":["<template>\r\n  <Head v-if=\"redirect?.length > 0\">\r\n    <Title>Some Traffic | {{ redirect[0]?.seo_title }}</Title>\r\n    <!-- Open Graph Meta Tags -->\r\n    <Meta property=\"og:title\" :content=\"redirect[0]?.seo_title\" />\r\n    <Meta property=\"og:description\" :content=\"redirect[0].seo_description\" />\r\n    <Meta property=\"og:image\" :content=\"redirect[0].seo_image_url\" />\r\n    <Meta property=\"og:url\" :content=\"fullpath\" />\r\n    <Meta property=\"og:type\" content=\"Some traffic web app\" />\r\n  </Head>\r\n\r\n  <div>\r\n    <div class=\"w-screen h-screen rounded-xl p-8 flex justify-center m-auto\">\r\n      <div class=\"space-y-8 flex justify-center m-auto object-center\">\r\n        <span class=\"inline-flex tracking\" v-if=\"flaq.redirect_flaq == true\">\r\n          <Loader />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useRouter } from \"vue-router\";\r\n// import { useScreen } from \"vue-screen\";\r\n\r\ndefinePageMeta({\r\n  layout: \"front\",\r\n});\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\n// const screen = useScreen();\r\nconst config = useRuntimeConfig();\r\n\r\nconst params = route.params;\r\nconst query = route.query;\r\nconst redirect = ref([]);\r\nconst destination = ref(\"\");\r\n// const screenWidth = screen.width;\r\n// const screenHeight = screen.height;\r\n\r\nconst flaq = reactive({ redirect_flaq: false });\r\n\r\nconst path = config.BASE_URL + route.fullPath;\r\nconst fullpath = path.split(\"?\")[0];\r\n\r\nconsole.log(\"Full Path: \", path);\r\nif (params.id && params.id.length === 7) {\r\n  if (query.fbclid) {\r\n    console.log(\"Save it.\");\r\n  } else {\r\n    console.log(\"Redirect it or show preview or do nothing.\");\r\n    await useFetch(`${config.API_BASE_URL}trackingurl/get-meta`, {\r\n      method: \"POST\",\r\n      body: {\r\n        tracking_url: fullpath,\r\n      },\r\n    })\r\n      .then((result) => {\r\n        if (result.data.value) {\r\n          redirect.value = result.data.value;\r\n          destination.value = result.data.value[0].destination_url;\r\n          if (\r\n            !destination.value.includes(\"http\") ||\r\n            !destination.value.includes(\"https\")\r\n          ) {\r\n            destination.value = \"https://\" + destination.value;\r\n          }\r\n\r\n          // router.push({\r\n          //   path: \"/_r\",\r\n          //   query: {\r\n          //     title: result.data.value[0].seo_title,\r\n          //     description: result.data.value[0].seo_description,\r\n          //     image: result.data.value[0].seo_image_url,\r\n          //   },\r\n          // });\r\n        }\r\n        if (result.error.value) {\r\n          console.log(\"Error no result\", result.error);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error useFetch: \", error);\r\n      });\r\n\r\n    \r\n  }\r\n  console.log(\"Redirect: \", redirect);\r\n}\r\nonMounted(async () => {\r\n    const screenWidth = screen.width;\r\n    const screenHeight = screen.height;\r\n    console.log('screenHeight', screenHeight);\r\n    console.log('screenWidth', screenWidth);\r\n    let network_speed = \"\";\r\n    if (navigator.connection) {\r\n      const connection = navigator.connection;\r\n      const speedMbps = connection.downlink; // Get the estimated download speed in Mbps\r\n      network_speed = speedMbps + \" Mbps\";\r\n      console.log(\"Internet speed is \" + speedMbps + \" Mbps\");\r\n    } else {\r\n      console.log(\"navigator.connection is not available\");\r\n    }\r\n\r\n    await useLazyAsyncData(\"mountains\", () => _);\r\n\r\n    await useFetch(`${config.API_BASE_URL}trackingurl/redirect`, {\r\n      method: \"POST\",\r\n      body: {\r\n        id: params.id,\r\n        tracking_url: fullpath,\r\n        screen_resolution: screenWidth + \"x\" + screenHeight,\r\n        network_speed,\r\n        referrer_url: document.referrer,\r\n      },\r\n    })\r\n      .catch((error) => {\r\n        console.log(\"Error useFetch: \", error);\r\n      });\r\n  window.location.assign(destination.value);\r\n});\r\n</script>\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,UAAA,QAAA,SAAA;AACA,cAAA;AAEA,UAAA,SAAA,iBAAA;AAEA,UAAA,SAAA,MAAA;AACA,UAAA,QAAA,MAAA;AACA,UAAA,WAAA,IAAA,CAAA,CAAA;AACA,UAAA,cAAA,IAAA,EAAA;AAIA,UAAA,OAAA,SAAA,EAAA,eAAA,MAAA,CAAA;AAEA,UAAA,OAAA,OAAA,WAAA,MAAA;AACA,UAAA,WAAA,KAAA,MAAA,GAAA,EAAA,CAAA;AAEA,YAAA,IAAA,eAAA,IAAA;AACA,QAAA,OAAA,MAAA,OAAA,GAAA,WAAA,GAAA;AACA,UAAA,MAAA,QAAA;AACA,gBAAA,IAAA,UAAA;AAAA,MACA,OAAA;AACA,gBAAA,IAAA,4CAAA;AACA;UACA,QAAA;AAAA,UACA,MAAA;AAAA,YACA,cAAA;AAAA,UACA;AAAA,QACA,GAAA,aAAA,EACA,KAAA,CAAA,WAAA;AACA,cAAA,OAAA,KAAA,OAAA;AACA,qBAAA,QAAA,OAAA,KAAA;AACA,wBAAA,QAAA,OAAA,KAAA,MAAA,CAAA,EAAA;AACA,gBACA,CAAA,YAAA,MAAA,SAAA,MAAA,KACA,CAAA,YAAA,MAAA,SAAA,OAAA,GACA;AACA,0BAAA,QAAA,aAAA,YAAA;AAAA,YACA;AAAA,UAUA;AACA,cAAA,OAAA,MAAA,OAAA;AACA,oBAAA,IAAA,mBAAA,OAAA,KAAA;AAAA,UACA;AAAA,QACA,CAAA,EACA,MAAA,CAAA,UAAA;AACA,kBAAA,IAAA,oBAAA,KAAA;AAAA,QACA,CAAA,CAAA;MAGA;AACA,cAAA,IAAA,cAAA,QAAA;AAAA,IACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
{"version":3,"file":"add-2e5bb1ce.js","sources":["../../../../pages/user-groups/add.vue"],"sourcesContent":["<template>\n    <div @click.shift=\"doSomething\">\n      <div id=\"last-tracking-url\">\n        <Modal\n          title=\"Are you sure?\"\n          modalClass=\"confirm-modal\"\n          v-model:visible=\"shouldShowDialog\"\n          :cancelButton=\"{ text: 'Cancel' }\"\n          :okButton=\"{ text: 'Okay', onclick: () => handleSave() }\"\n        >\n          <div class=\"text\">\n            This item already exists in the database. Are you sure that you want\n            to create it double?\n          </div>\n        </Modal>\n  \n        <form @submit.prevent=\"createGroup\">\n          <div class=\"flex justify-between\">\n            <h1 class=\"font-bold py-4 capitalize\">Add a new group</h1>\n  \n            <button\n              type=\"submit\"\n              class=\"bg-[#bcbcbc] inline-flex justify-center rounded-md border border-transparent pt-4 px-4 text-sm font-medium text-black shadow-sm hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n            >\n             Add group\n            </button>\n          </div>\n  \n          <div class=\"overflow-hidden shadow sm:rounded-md\">\n            <div class=\"px-4 py-5 sm:p-6\">\n              <div class=\"col-span-12\">\n                <div class=\"grid grid-cols-12\">\n                  <div\n                    class=\"col-span-3 flex items-center text-sm font-medium text-gray-700\"\n                  >\n                    ID\n                  </div>\n                  <div class=\"col-span-3\">\n                    <input\n                      type=\"text\"\n                      v-model=\"form.unique_identifier\"\n                      :disabled=\"form.unique_identifier\"\n                      id=\"unique_identifier\"\n                      class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\n                      required\n                    />\n                  </div>\n                </div>\n              </div>\n  \n              <div class=\"flex flex-row mt-4\">\n                <div class=\"basis-1/2 pr-1.5\">\n                  <div class=\"col-span-12\">\n                    <div class=\"grid grid-cols-12\">\n                      <div\n                        class=\"col-span-3 flex items-center text-sm font-medium text-gray-700\"\n                      >\n                        Created\n                      </div>\n                      <div class=\"col-span-9\">\n                        <input\n                          type=\"text\"\n                          v-model=\"form.timestamp\"\n                          :disabled=\"form.timestamp\"\n                          id=\"timestamp\"\n                          class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\n                          required\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"basis-1/2 pl-1.5\">\n                  <div class=\"col-span-12\">\n                    <div class=\"grid grid-cols-12\">\n                      <div\n                        class=\"col-span-3 flex items-center text-sm font-medium text-gray-700\"\n                      >\n                        Created By\n                      </div>\n                      <div class=\"col-span-9\">\n                        <input\n                          type=\"text\"\n                          v-model=\"form.createdBy\"\n                          :disabled=\"form.createdBy\"\n                          id=\"username\"\n                          class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\n                          required\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"col-span-12 py-2\">\n              <div\n                class=\"grid grid-cols-1 sm:grid-cols-1 md:grid-cols-1 lg:grid-cols-1 xl:grid-cols-12 gap-4 gap-x-4\"\n              >\n                <div\n                  class=\"col-span-3 flex items-center text-sm font-medium text-gray-700\"\n                >\n                  Related to Project *\n                  <svg\n                    v-tooltip.right=\"{\n                      content:\n                        '<div>Obligatory, here you have to select which project you want to add group to.</div>',\n                      html: true,\n                    }\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke-width=\"1.5\"\n                    stroke=\"currentColor\"\n                    class=\"w-6 h-6 ml-2 text-gray-800\"\n                    style=\"display: inline-block\"\n                  >\n                    <path\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                      d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\"\n                    />\n                  </svg>\n                  <!-- <div\n                    class=\"basis-1/2 flex items-center text-sm font-medium text-gray-700 pl-3\"\n                  >\n                    <button\n                      type=\"button\"\n                      :disabled=\"form.category === null\"\n                      @click=\"(event) => saveDefault(form.category)\"\n                      class=\"bg-[#bcbcbc] rounded-md border border-transparent py-1 px-4 text-sm font-medium text-black disabled:text-gray-500\"\n                    >\n                      Store as default\n                    </button>\n                    <svg\n                      v-tooltip.right=\"{\n                        content:\n                          '<div>The value that is selected here on the right becomes the default value when you press the “store as default”button. <br />The next time that you create a new category item, This value will be automatically selected for you. </div>',\n                        html: true,\n                      }\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke-width=\"1.5\"\n                      stroke=\"currentColor\"\n                      class=\"w-6 h-6 ml-2 text-gray-800\"\n                      style=\"display: inline-block\"\n                    >\n                      <path\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\"\n                      />\n                    </svg>\n                  </div> -->\n                </div>\n                <div class=\"col-span-9\">\n                  <select\n                    v-model=\"form.ProjectId\"\n                    id=\"category\"\n                    class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\n                    required\n                  >\n                    <option v-for=\"project in projects\" :key=\"project.id\" :value=\"project.id\">{{project.name}}</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n              <div class=\"col-span-12 mt-4\">\n                <div class=\"grid grid-cols-12\">\n                  <div\n                    class=\"col-span-3 flex items-center text-sm font-medium text-gray-700\"\n                  >\n                    Group name *\n                  </div>\n                  <div class=\"col-span-9\">\n                    <input\n                      placeholder=\"Need to enter account name (obligatory)\"\n                      type=\"text\"\n                      v-model=\"form.name\"\n                      id=\"name\"\n                      class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\n                      required\n                    />\n                  </div>\n                </div>\n              </div>\n  \n              <div class=\"col-span-12 sm:col-span-12 mt-4\">\n                <div\n                  class=\"grid grid-cols-1 sm:grid-cols-1 md:grid-cols-1 lg:grid-cols-1 xl:grid-cols-12 gap-4 gap-x-4\"\n                >\n                  <div class=\"col-span-12 sm:col-span-12\">\n                    <label\n                      for=\"description\"\n                      class=\"block text-sm font-medium text-gray-700\"\n                      >Description</label\n                    >\n                    <textarea\n                      v-model=\"form.description\"\n                      rows=\"6\"\n                      id=\"description\"\n                      class=\"bg-[#dddddd] py-2 px-3 text-gray-900 mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\n                      placeholder=\"(free text field, 1000 characters max, about 30 sentenses max) what is the goal of this item or group\"\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n              </div>\n  \n            <!-- <div class=\"px-4 py-3 text-right sm:px-6 w-full sm:w-full\">\n              <button\n                type=\"submit\"\n                class=\"bg-[#bcbcbc] inline-flex justify-center rounded-md border border-transparent py-2 px-4 text-sm font-medium text-black shadow-sm hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n              >\n                Create category item\n              </button>\n            </div> -->\n          </div>\n        </form>\n      </div>\n    </div>\n  </template>\n  \n  <style scoped>\n  input:checked {\n    background-color: #22c55e; /* bg-green-500 */\n  }\n  \n  input:checked ~ span:last-child {\n    --tw-translate-x: 1.75rem; /* translate-x-7 */\n  }\n  .valid {\n    border: 3px solid green;\n  }\n  \n  .invalid {\n    border: 3px solid red;\n  }\n  \n  #awn-popup-wrapper {\n    display: none !important;\n  }\n  \n  .input-w-loading {\n    width: 90%;\n  }\n  img.loading {\n    width: 50px;\n    display: inline-block;\n    margin-left: 10px;\n  }\n  </style>\n  \n  <script setup>\n  import { Modal } from \"usemodal-vue3\"\n  definePageMeta({\n    middleware: [\"auth\"],\n  })\n  const AWN = inject(\"$awn\")\n  const config = useRuntimeConfig()\n  \n  const shouldShowDialog = ref(false)\n  const clickdatas = ref([])\n  const activeAccount = ref(\n  localStorage.getItem(\"activeAccount\")\n)\n  const projects = ref([])\n  const activeProject = ref(0)\n  activeProject.value = localStorage.getItem('activeProject') ? parseInt(localStorage.getItem('activeProject')) : 0\n\n\n  // const defUser = JSON.parse(localStorage.getItem(\"user\"));\n  let defaultCategory = localStorage.getItem(\"sometraffic_default_category\")\n  let defaultGroup = localStorage.getItem(\"sometraffic_default_group\")\n  let defaultPriority = localStorage.getItem(\"sometraffic_default_priority\")\n  let user = localStorage.getItem(\"user\")\n  \n  let timestamp = new Date().toLocaleTimeString()\n  \n  const uniqueUrl = ref(\"\")\n  const isLoading = ref(false)\n  \n  setInterval(() => {\n    timestamp = new Date().toLocaleTimeString()\n  }, 10)\n  \n  function isValidUrl(urlString) {\n    let urlPattern = new RegExp(\n      \"^(https?:\\\\/\\\\/)?\" + // validate protocol\n        \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // validate domain name\n        \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // validate OR ip (v4) address\n        \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // validate port and path\n        \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // validate query string\n        \"(\\\\#[-a-z\\\\d_]*)?$\",\n      \"i\"\n    ) // validate fragment locator\n  \n    return !!urlPattern.test(urlString)\n  }\n  \n  const form = reactive({\n  name: \"\",\n  description: \"\",\n  unique_identifier: \"\",\n  ProjectId: \"\",\n  createdBy: JSON.parse(user).userName,\n  timestamp,\n})\n  \n  const createGroup = async () => {\n      const a_data = {\n        ProjectId: form.ProjectId,\n        createdBy: form.createdBy,\n        unique_identifier: form.unique_identifier,\n        name: form.name,\n        description: form.description,\n      }\n  \n      await useFetch(`${config.API_BASE_URL}groups/create`, {\n        method: \"POST\",\n        body: a_data,\n      })\n        .then((result) => {\n          if (result.data.value) {\n            AWN.success(result.data.value.message)\n            uniqueUrl.value = \"\"\n            navigateTo(\"/user-groups\")\n          }\n          if (result.error.value) {\n            console.log(\"error value1\", result.error.value.data.message)\n            AWN.alert(error)\n          }\n        })\n        .catch((error) => {\n          console.log(\"error value\", error)\n          AWN.alert(\"Unable to create item.\")\n        })\n  }\n  \n  const handleSave = async () => {\n    let a_data = {\n      username: form.username,\n      timestamp: new Date(),\n      name: form.name,\n      unique_identifier: form.unique_identifier,\n      description: form.description,\n      category: form.category,\n      priority: form.priority,\n      cat_group: form.group,\n      visibility: form.visibility,\n      url_1_link: form.url_1_link,\n      url_2_txt: form.url_2_txt,\n      url_2_link: form.url_2_link,\n      plan_frequency: form.plan_frequency,\n      automatic_status: form.automatic_status,\n    }\n  \n    await useFetch(`${config.API_BASE_URL}category-items/create`, {\n      method: \"POST\",\n      body: a_data,\n    })\n      .then((result) => {\n        if (result.data.value) {\n          AWN.success(result.data.value.message)\n          uniqueUrl.value = \"\"\n          navigateTo(\"/category-items\")\n        }\n        if (result.error.value) {\n          console.log(\"error value1\", result.error.value.data.message)\n          shouldShowDialog.value = false\n          AWN.alert(error)\n        }\n      })\n      .catch((error) => {\n        console.log(\"error value\", error)\n        AWN.alert(\"Validation error\")\n      })\n  }\n  \n  const getTrackingURL = async () => {\n    const { data, error } = await useFetch(\n      `${config.API_BASE_URL}groups/gettrackingurl`\n    )\n    if (data.value) {\n      form.unique_identifier = data.value.newTrackingURl\n    }\n    if (error.value) {\n      await AWN.alert(error.value.statusMessage)\n    }\n  }\n  \n  const checkUrl = async (link) => {\n    isLoading.value = true\n    if (isValidUrl(link)) {\n      AWN.asyncBlock(\n        useFetch(`${config.API_BASE_URL}category-items/all/?url=${link}`),\n        (resp) => {\n          isLoading.value = false\n          if (resp.data && resp.data.value.length) {\n            uniqueUrl.value = \"invalid\"\n          } else {\n            uniqueUrl.value = \"valid\"\n          }\n        }\n      )\n    }\n  }\n  \n  const setLoading = () => {\n    isLoading.value = true\n  }\n  \n  const copy = async (id) => {\n    // Get the text field\n    var copyText = document.getElementById(id)\n  \n    // Select the text field\n    copyText.select()\n    copyText.setSelectionRange(0, 99999) // For mobile devices\n  \n    // Copy the text inside the text field\n    navigator.clipboard.writeText(copyText.value)\n    await AWN.success(copyText.value + \" copied to clipboard!\")\n    // Alert the copied text\n    //alert(\"Copied the text: \" + copyText.value);\n  }\n  \n  const saveDefault = async (id) => {\n    localStorage.setItem(\"sometraffic_default_category\", id)\n    await AWN.success(`Standard category set to ${id}.`)\n  }\n  const saveDefaultGroup = async (id) => {\n    localStorage.setItem(\"sometraffic_default_group\", id)\n    await AWN.success(`Standard group set to ${id.replace(\"_\", \" \")}.`)\n  }\n  const saveDefaultPriority = async (id) => {\n    localStorage.setItem(\"sometraffic_default_priority\", id)\n    await AWN.success(\n      `Standard priority set to ${\n        id === \"1\" ? \"high\" : id === \"2\" ? \"medium\" : id === \"3\" ? \"low\" : \"\"\n      }.`\n    )\n  }\n  \n  const setClickDatas = async () => {\n    const { data: data } = await useFetch(\n      `${config.API_BASE_URL}groups/all?userid=${JSON.parse(user).userId}`\n    )\n    clickdatas.value = data.value\n  }\n\n  const setProjects = async () => {\n  const { data: data } = await useFetch(\n    `${config.API_BASE_URL}projects/all?AccountId=${activeAccount.value}`\n  )\n  projects.value = data.value\n  form.ProjectId = activeProject.value\n}\n  onBeforeMount(setProjects)\n  onBeforeMount(setClickDatas)\n  onBeforeMount(getTrackingURL)\n  \n  // onMounted(() => {\n  //   document.addEventListener(\"keydown\", (event) => {\n  //     // event.keyCode or event.which  property will have the code of the pressed key\n  //     let keyCode = event.keyCode ? event.keyCode : event.which;\n  \n  //     // 13 points the enter key, 16 points the shift key\n  //     if (event.altKey && keyCode === 67) {\n  //       getTrackingURL();\n  \n  //       form.username = JSON.parse(user).userName;\n  //       form.timestamp = new Date().toLocaleTimeString();\n  //       form.description = \"\";\n  //       form.category = \"\";\n  //       form.name = \"\";\n  \n  //       form.group = \"all\";\n  //       form.priority = \"\";\n  //       form.visibility = \"low\";\n  //       form.url_1_link = \"\";\n  //       form.url_2_txt = \"\";\n  //       form.url_2_link = \"\";\n  //       form.plan_frequency = \"\";\n  //       form.automatic_status = \"\";\n  //     }\n  //   });\n  // });\n  </script>\n  "],"names":["error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAoQA,UAAA,MAAA,OAAA,MAAA;AACA,UAAA,SAAA,iBAAA;AAEA,UAAA,mBAAA,IAAA,KAAA;AACA,QAAA,CAAA,CAAA;AACA;AAAA,MACA,aAAA,QAAA,eAAA;AAAA,IACA;AACA,UAAA,WAAA,IAAA,EAAA;AACA,UAAA,gBAAA,IAAA,CAAA;AACA,kBAAA,QAAA,aAAA,QAAA,eAAA,IAAA,SAAA,aAAA,QAAA,eAAA,CAAA,IAAA;AAIA,iBAAA,QAAA,8BAAA;AACA,iBAAA,QAAA,2BAAA;AACA,iBAAA,QAAA,8BAAA;AACA,QAAA,OAAA,aAAA,QAAA,MAAA;AAEA,QAAA,YAAA,IAAA,KAAA,EAAA,mBAAA;AAEA,UAAA,YAAA,IAAA,EAAA;AACA,QAAA,KAAA;AAEA,gBAAA,MAAA;AACA,kBAAA,IAAA,KAAA,EAAA,mBAAA;AAAA,IACA,GAAA,EAAA;AAgBA,UAAA,OAAA,SAAA;AAAA,MACA,MAAA;AAAA,MACA,aAAA;AAAA,MACA,mBAAA;AAAA,MACA,WAAA;AAAA,MACA,WAAA,KAAA,MAAA,IAAA,EAAA;AAAA,MACA;AAAA,IACA,CAAA;AAgCA,UAAA,aAAA,YAAA;AACA,UAAA,SAAA;AAAA,QACA,UAAA,KAAA;AAAA,QACA,WAAA,IAAA,KAAA;AAAA,QACA,MAAA,KAAA;AAAA,QACA,mBAAA,KAAA;AAAA,QACA,aAAA,KAAA;AAAA,QACA,UAAA,KAAA;AAAA,QACA,UAAA,KAAA;AAAA,QACA,WAAA,KAAA;AAAA,QACA,YAAA,KAAA;AAAA,QACA,YAAA,KAAA;AAAA,QACA,WAAA,KAAA;AAAA,QACA,YAAA,KAAA;AAAA,QACA,gBAAA,KAAA;AAAA,QACA,kBAAA,KAAA;AAAA,MACA;AAEA,YAAA,SAAA,GAAA,OAAA,qCAAA;AAAA,QACA,QAAA;AAAA,QACA,MAAA;AAAA,MACA,GAAA,aAAA,EACA,KAAA,CAAA,WAAA;AACA,YAAA,OAAA,KAAA,OAAA;AACA,cAAA,QAAA,OAAA,KAAA,MAAA,OAAA;AACA,oBAAA,QAAA;AACA,qBAAA,iBAAA;AAAA,QACA;AACA,YAAA,OAAA,MAAA,OAAA;AACA,kBAAA,IAAA,gBAAA,OAAA,MAAA,MAAA,KAAA,OAAA;AACA,2BAAA,QAAA;AACA,cAAA,MAAA,KAAA;AAAA,QACA;AAAA,MACA,CAAA,EACA,MAAA,CAAAA,WAAA;AACA,gBAAA,IAAA,eAAAA,MAAA;AACA,YAAA,MAAA,kBAAA;AAAA,MACA,CAAA;AAAA,IACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
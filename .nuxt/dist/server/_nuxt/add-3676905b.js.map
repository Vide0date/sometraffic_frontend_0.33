{"version":3,"file":"add-3676905b.js","sources":["../../../../pages/users/add.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"last-users\">\r\n      <h1 class=\"font-bold py-4 uppercase text-center\">Add New User</h1>\r\n      <form @submit.prevent=\"createUser\">\r\n        <div class=\"overflow-hidden shadow sm:rounded-md\">\r\n          <div class=\"px-4 py-5 sm:p-6 w-full md:w-2/4 m-auto sm:w-full\">\r\n            <div class=\"grid grid-cols-6 gap-6\">\r\n              <div class=\"col-span-10 sm:col-span-12\">\r\n                <label\r\n                  for=\"userName\"\r\n                  class=\"block text-sm font-medium text-gray-700\"\r\n                  >First name</label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"form.userName\"\r\n                  id=\"userName\"\r\n                  class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div class=\"col-span-10 sm:col-span-12\">\r\n                <label\r\n                  for=\"email\"\r\n                  class=\"block text-sm font-medium text-gray-700\"\r\n                  >Email address</label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"form.email\"\r\n                  id=\"email\"\r\n                  class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div class=\"col-span-10 sm:col-span-12\">\r\n                <label\r\n                  for=\"password\"\r\n                  class=\"block text-sm font-medium text-gray-700\"\r\n                  >Password</label\r\n                >\r\n                <input\r\n                  type=\"password\"\r\n                  v-model=\"form.password\"\r\n                  id=\"password\"\r\n                  class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div class=\"col-span-10 sm:col-span-12\">\r\n                <label\r\n                  for=\"userType\"\r\n                  class=\"block text-sm font-medium text-gray-700\"\r\n                  >User Type</label\r\n                >\r\n                <select\r\n                  id=\"userType\"\r\n                  v-model=\"form.userType\"\r\n                  autocomplete=\"userType\"\r\n                  class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 block w-full rounded-md border border-gray-300 py-2 px-3 shadow-sm focus:border-gray-800 focus:outline-none focus:ring-indigo-500 sm:text-sm\"\r\n                  required\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"Administrator\">Administrator</option>\r\n                  <option value=\"User\">User</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div class=\"col-span-10 sm:col-span-12\">\r\n                <label\r\n                  for=\"userType\"\r\n                  class=\"block text-sm font-medium text-gray-700\"\r\n                  >Account</label\r\n                >\r\n                <select\r\n                  id=\"Account\"\r\n                  v-model=\"form.AccountId\"\r\n                  autocomplete=\"Account\"\r\n                  class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 block w-full rounded-md border border-gray-300 py-2 px-3 shadow-sm focus:border-gray-800 focus:outline-none focus:ring-indigo-500 sm:text-sm\"\r\n                  required\r\n                >\r\n                <option value=null>Select</option>\r\n                <option v-for=\"account in accounts\" :key=\"account.id\" :value=\"account.id\">{{account.name}}</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            class=\"px-4 py-3 text-right sm:px-6 w-full md:w-2/4 m-auto sm:w-full\"\r\n          >\r\n            <button\r\n              type=\"submit\"\r\n              class=\"bg-[#bcbcbc] inline-flex justify-center rounded-md border border-transparent py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\ndefinePageMeta({\r\n  middleware: [\"auth\", \"admin\"],\r\n});\r\nconst AWN = inject(\"$awn\");\r\nconst config = useRuntimeConfig();\r\nconst form = reactive({\r\n  userName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  userType: \"\",\r\n  AccountId: null,\r\n});\r\n\r\nconst accounts = ref([])\r\nconst createUser = async () => {\r\n  let a_data = {\r\n    userName: form.userName,\r\n    email: form.email,\r\n    password: form.password,\r\n    userType: form.userType,\r\n    AccountId: form.AccountId,\r\n  };\r\n\r\n  // const { data, error } =\r\n  await useFetch(`${config.API_BASE_URL}users/create`, {\r\n    method: \"POST\",\r\n    body: a_data,\r\n  })\r\n    .then((result) => {\r\n      if (result.data.value) {\r\n        AWN.success(result.data.value.message);\r\n        navigateTo(\"/users\");\r\n      }\r\n      if (result.error.value) {\r\n        console.log(\"error\", result.error.value.data.message);\r\n        AWN.alert(error);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"error\", error);\r\n      AWN.alert(\"Validation error\");\r\n    });\r\n  // if (data.value) {\r\n\r\n  // }\r\n  // if (error.value) {\r\n\r\n  // }\r\n\r\n  // location.assign('/users')\r\n};\r\nconst setAccounts = async () => {\r\n  const { data: data } = await useFetch(`${config.API_BASE_URL}accounts/all`)\r\n  accounts.value = data.value\r\n}\r\nonBeforeMount(setAccounts)\r\n</script>\r\n\r\n<style scoped></style>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AA+GA,WAAA,MAAA;AACA,qBAAA;AACA,UAAA,OAAA,SAAA;AAAA,MACA,UAAA;AAAA,MACA,OAAA;AAAA,MACA,UAAA;AAAA,MACA,UAAA;AAAA,MACA,WAAA;AAAA,IACA,CAAA;AAEA,UAAA,WAAA,IAAA,EAAA;;;;;;;;;;;;;;;;"}
{"version":3,"file":"add-c2c3b50f.js","sources":["../../../../pages/accounts/add.vue"],"sourcesContent":["<template>\n  <div @click.shift=\"doSomething\">\n    <div id=\"last-tracking-url\">\n      <Modal\n        title=\"Are you sure?\"\n        modalClass=\"confirm-modal\"\n        v-model:visible=\"shouldShowDialog\"\n        :cancelButton=\"{ text: 'Cancel' }\"\n        :okButton=\"{ text: 'Okay', onclick: () => handleSave() }\"\n      >\n        <div class=\"text\">\n          This item already exists in the database. Are you sure that you want\n          to create it double?\n        </div>\n      </Modal>\n\n      <form @submit.prevent=\"createAccount\">\n        <div class=\"flex justify-between\">\n          <h1 class=\"font-bold py-4 capitalize\">Create a new account</h1>\n\n          <button\n            type=\"submit\"\n            class=\"bg-[#bcbcbc] inline-flex justify-center rounded-md border border-transparent pt-4 px-4 text-sm font-medium text-black shadow-sm hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n          >\n            Create Account\n          </button>\n        </div>\n\n        <div class=\"overflow-hidden shadow sm:rounded-md\">\n          <div class=\"px-4 py-5 sm:p-6\">\n            <div class=\"col-span-12\">\n              <div class=\"grid grid-cols-12\">\n                <div\n                  class=\"col-span-3 flex items-center text-sm font-medium text-gray-700\"\n                >\n                  Item ID\n                </div>\n                <div class=\"col-span-3\">\n                  <input\n                    type=\"text\"\n                    v-model=\"form.unique_identifier\"\n                    :disabled=\"form.unique_identifier\"\n                    id=\"unique_identifier\"\n                    class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\n                    required\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"flex flex-row mt-4\">\n              <div class=\"basis-1/2 pr-1.5\">\n                <div class=\"col-span-12\">\n                  <div class=\"grid grid-cols-12\">\n                    <div\n                      class=\"col-span-3 flex items-center text-sm font-medium text-gray-700\"\n                    >\n                      Created\n                    </div>\n                    <div class=\"col-span-9\">\n                      <input\n                        type=\"text\"\n                        v-model=\"form.timestamp\"\n                        :disabled=\"form.timestamp\"\n                        id=\"timestamp\"\n                        class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\n                        required\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"basis-1/2 pl-1.5\">\n                <div class=\"col-span-12\">\n                  <div class=\"grid grid-cols-12\">\n                    <div\n                      class=\"col-span-3 flex items-center text-sm font-medium text-gray-700\"\n                    >\n                      Created By\n                    </div>\n                    <div class=\"col-span-9\">\n                      <input\n                        type=\"text\"\n                        v-model=\"form.createdBy\"\n                        :disabled=\"form.createdBy\"\n                        id=\"username\"\n                        class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\n                        required\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-span-12 mt-4\">\n              <div class=\"grid grid-cols-12\">\n                <div\n                  class=\"col-span-3 flex items-center text-sm font-medium text-gray-700\"\n                >\n                  Account name *\n                </div>\n                <div class=\"col-span-9\">\n                  <input\n                    placeholder=\"Need to enter account name (obligatory)\"\n                    type=\"text\"\n                    v-model=\"form.name\"\n                    id=\"name\"\n                    class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\n                    required\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-span-12 sm:col-span-12 mt-4\">\n              <div\n                class=\"grid grid-cols-1 sm:grid-cols-1 md:grid-cols-1 lg:grid-cols-1 xl:grid-cols-12 gap-4 gap-x-4\"\n              >\n                <div class=\"col-span-12 sm:col-span-12\">\n                  <label\n                    for=\"description\"\n                    class=\"block text-sm font-medium text-gray-700\"\n                    >Description</label\n                  >\n                  <textarea\n                    v-model=\"form.description\"\n                    rows=\"6\"\n                    id=\"description\"\n                    class=\"bg-[#dddddd] py-2 px-3 text-gray-900 mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\n                    placeholder=\"(free text field, 1000 characters max, about 30 sentenses max) what is the goal of this item or project\"\n                  ></textarea>\n                </div>\n              </div>\n            </div>\n            </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<style scoped>\ninput:checked {\n  background-color: #22c55e; /* bg-green-500 */\n}\n\ninput:checked ~ span:last-child {\n  --tw-translate-x: 1.75rem; /* translate-x-7 */\n}\n.valid {\n  border: 3px solid green;\n}\n\n.invalid {\n  border: 3px solid red;\n}\n\n#awn-popup-wrapper {\n  display: none !important;\n}\n\n.input-w-loading {\n  width: 90%;\n}\nimg.loading {\n  width: 50px;\n  display: inline-block;\n  margin-left: 10px;\n}\n</style>\n\n<script setup>\nimport { Modal } from \"usemodal-vue3\"\ndefinePageMeta({\n  middleware: [\"auth\"],\n})\nconst AWN = inject(\"$awn\")\nconst config = useRuntimeConfig()\n\nconst shouldShowDialog = ref(false)\nlet user = localStorage.getItem(\"user\")\n\nlet timestamp = new Date().toLocaleTimeString()\n\nconst uniqueUrl = ref(\"\")\n\nsetInterval(() => {\n  timestamp = new Date().toLocaleTimeString()\n}, 10)\n\n\nconst form = reactive({\n  createdBy: JSON.parse(user).userName,\n  timestamp,\n  unique_identifier: \"\",\n  description: \"\",\n  name: \"\",\n})\n\nconst createAccount = async () => {\n  // if (uniqueUrl.value === \"valid\") {\n    const a_data = {\n      createdBy: form.createdBy,\n      name: form.name,\n      unique_identifier: form.unique_identifier,\n      description: form.description,\n    }\n\n    await useFetch(`${config.API_BASE_URL}accounts/create`, {\n      method: \"POST\",\n      body: a_data,\n    })\n      .then((result) => {\n        if (result.data.value) {\n          AWN.success(result.data.value.message)\n          uniqueUrl.value = \"\"\n          navigateTo(\"/accounts\").then(()=>{\n            const router = useRouter()\n            router.go()\n          })\n        }\n        if (result.error.value) {\n          console.log(\"error value1\", result.error.value.data.message)\n          AWN.alert(error)\n        }\n      })\n      .catch((error) => {\n        console.log(\"error value\", error)\n        AWN.alert(\"Unable to create account.\")\n      })\n  // } else {\n  //   console.log(\"url exists\")\n  //   shouldShowDialog.value = true\n  // }\n}\n\nconst getTrackingURL = async () => {\n  const { data, error } = await useFetch(\n    `${config.API_BASE_URL}accounts/gettrackingurl`\n  )\n  if (data.value) {\n    form.unique_identifier = data.value.newTrackingURl\n  }\n  if (error.value) {\n    await AWN.alert(error.value.statusMessage)\n  }\n}\n\n\n\n\n\nonBeforeMount(getTrackingURL)\n\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAiLA,WAAA,MAAA;AACA,qBAAA;AAEA,UAAA,mBAAA,IAAA,KAAA;AACA,QAAA,OAAA,aAAA,QAAA,MAAA;AAEA,QAAA,YAAA,IAAA,KAAA,EAAA,mBAAA;AAEA,QAAA,EAAA;AAEA,gBAAA,MAAA;AACA,kBAAA,IAAA,KAAA,EAAA,mBAAA;AAAA,IACA,GAAA,EAAA;AAGA,UAAA,OAAA,SAAA;AAAA,MACA,WAAA,KAAA,MAAA,IAAA,EAAA;AAAA,MACA;AAAA,MACA,mBAAA;AAAA,MACA,aAAA;AAAA,MACA,MAAA;AAAA,IACA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
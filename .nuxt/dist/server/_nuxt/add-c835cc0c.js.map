{"version":3,"file":"add-c835cc0c.js","sources":["../../../../pages/user-groups/add.vue"],"sourcesContent":["<template>\r\n    <div @click.shift=\"doSomething\">\r\n      <div id=\"last-tracking-url\">\r\n        <Modal\r\n          title=\"Are you sure?\"\r\n          modalClass=\"confirm-modal\"\r\n          v-model:visible=\"shouldShowDialog\"\r\n          :cancelButton=\"{ text: 'Cancel' }\"\r\n          :okButton=\"{ text: 'Okay', onclick: () => handleSave() }\"\r\n        >\r\n          <div class=\"text\">\r\n            This item already exists in the database. Are you sure that you want\r\n            to create it double?\r\n          </div>\r\n        </Modal>\r\n  \r\n        <form @submit.prevent=\"createGroup\">\r\n          <div class=\"flex justify-between\">\r\n            <h1 class=\"font-bold py-4 capitalize\">Add a new group</h1>\r\n  \r\n            <button\r\n              type=\"submit\"\r\n              class=\"bg-[#bcbcbc] inline-flex justify-center rounded-md border border-transparent pt-4 px-4 text-sm font-medium text-black shadow-sm hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n            >\r\n             Add group\r\n            </button>\r\n          </div>\r\n  \r\n          <div class=\"overflow-hidden shadow sm:rounded-md\">\r\n            <div class=\"px-4 py-5 sm:p-6\">\r\n              <div class=\"col-span-12\">\r\n                <div class=\"grid grid-cols-12\">\r\n                  <div\r\n                    class=\"col-span-3 flex items-center text-sm font-medium text-gray-700\"\r\n                  >\r\n                    ID\r\n                  </div>\r\n                  <div class=\"col-span-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      v-model=\"form.unique_identifier\"\r\n                      :disabled=\"form.unique_identifier\"\r\n                      id=\"unique_identifier\"\r\n                      class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n  \r\n              <div class=\"flex flex-row mt-4\">\r\n                <div class=\"basis-1/2 pr-1.5\">\r\n                  <div class=\"col-span-12\">\r\n                    <div class=\"grid grid-cols-12\">\r\n                      <div\r\n                        class=\"col-span-3 flex items-center text-sm font-medium text-gray-700\"\r\n                      >\r\n                        Created\r\n                      </div>\r\n                      <div class=\"col-span-9\">\r\n                        <input\r\n                          type=\"text\"\r\n                          v-model=\"form.timestamp\"\r\n                          :disabled=\"form.timestamp\"\r\n                          id=\"timestamp\"\r\n                          class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"basis-1/2 pl-1.5\">\r\n                  <div class=\"col-span-12\">\r\n                    <div class=\"grid grid-cols-12\">\r\n                      <div\r\n                        class=\"col-span-3 flex items-center text-sm font-medium text-gray-700\"\r\n                      >\r\n                        Created By\r\n                      </div>\r\n                      <div class=\"col-span-9\">\r\n                        <input\r\n                          type=\"text\"\r\n                          v-model=\"form.createdBy\"\r\n                          :disabled=\"form.createdBy\"\r\n                          id=\"username\"\r\n                          class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"col-span-12 py-2\">\r\n              <div\r\n                class=\"grid grid-cols-1 sm:grid-cols-1 md:grid-cols-1 lg:grid-cols-1 xl:grid-cols-12 gap-4 gap-x-4\"\r\n              >\r\n                <div\r\n                  class=\"col-span-3 flex items-center text-sm font-medium text-gray-700\"\r\n                >\r\n                  Related to Project *\r\n                  <svg\r\n                    v-tooltip.right=\"{\r\n                      content:\r\n                        '<div>Obligatory, here you have to select which project you want to add group to.</div>',\r\n                      html: true,\r\n                    }\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke-width=\"1.5\"\r\n                    stroke=\"currentColor\"\r\n                    class=\"w-6 h-6 ml-2 text-gray-800\"\r\n                    style=\"display: inline-block\"\r\n                  >\r\n                    <path\r\n                      stroke-linecap=\"round\"\r\n                      stroke-linejoin=\"round\"\r\n                      d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\"\r\n                    />\r\n                  </svg>\r\n                  <!-- <div\r\n                    class=\"basis-1/2 flex items-center text-sm font-medium text-gray-700 pl-3\"\r\n                  >\r\n                    <button\r\n                      type=\"button\"\r\n                      :disabled=\"form.category === null\"\r\n                      @click=\"(event) => saveDefault(form.category)\"\r\n                      class=\"bg-[#bcbcbc] rounded-md border border-transparent py-1 px-4 text-sm font-medium text-black disabled:text-gray-500\"\r\n                    >\r\n                      Store as default\r\n                    </button>\r\n                    <svg\r\n                      v-tooltip.right=\"{\r\n                        content:\r\n                          '<div>The value that is selected here on the right becomes the default value when you press the “store as default”button. <br />The next time that you create a new category item, This value will be automatically selected for you. </div>',\r\n                        html: true,\r\n                      }\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke-width=\"1.5\"\r\n                      stroke=\"currentColor\"\r\n                      class=\"w-6 h-6 ml-2 text-gray-800\"\r\n                      style=\"display: inline-block\"\r\n                    >\r\n                      <path\r\n                        stroke-linecap=\"round\"\r\n                        stroke-linejoin=\"round\"\r\n                        d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\"\r\n                      />\r\n                    </svg>\r\n                  </div> -->\r\n                </div>\r\n                <div class=\"col-span-9\">\r\n                  <select\r\n                    v-model=\"form.ProjectId\"\r\n                    id=\"category\"\r\n                    class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\r\n                    required\r\n                  >\r\n                    <option v-for=\"project in projects\" :key=\"project.id\" :value=\"project.id\">{{project.name}}</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n              <div class=\"col-span-12 mt-4\">\r\n                <div class=\"grid grid-cols-12\">\r\n                  <div\r\n                    class=\"col-span-3 flex items-center text-sm font-medium text-gray-700\"\r\n                  >\r\n                    Group name *\r\n                  </div>\r\n                  <div class=\"col-span-9\">\r\n                    <input\r\n                      placeholder=\"Need to enter account name (obligatory)\"\r\n                      type=\"text\"\r\n                      v-model=\"form.name\"\r\n                      id=\"name\"\r\n                      class=\"bg-[#dddddd] h-10 py-2 px-3 text-gray-900 mt-1 w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n  \r\n              <div class=\"col-span-12 sm:col-span-12 mt-4\">\r\n                <div\r\n                  class=\"grid grid-cols-1 sm:grid-cols-1 md:grid-cols-1 lg:grid-cols-1 xl:grid-cols-12 gap-4 gap-x-4\"\r\n                >\r\n                  <div class=\"col-span-12 sm:col-span-12\">\r\n                    <label\r\n                      for=\"description\"\r\n                      class=\"block text-sm font-medium text-gray-700\"\r\n                      >Description</label\r\n                    >\r\n                    <textarea\r\n                      v-model=\"form.description\"\r\n                      rows=\"6\"\r\n                      id=\"description\"\r\n                      class=\"bg-[#dddddd] py-2 px-3 text-gray-900 mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-800 focus:ring-indigo-500 sm:text-sm\"\r\n                      placeholder=\"(free text field, 1000 characters max, about 30 sentenses max) what is the goal of this item or group\"\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              </div>\r\n  \r\n            <!-- <div class=\"px-4 py-3 text-right sm:px-6 w-full sm:w-full\">\r\n              <button\r\n                type=\"submit\"\r\n                class=\"bg-[#bcbcbc] inline-flex justify-center rounded-md border border-transparent py-2 px-4 text-sm font-medium text-black shadow-sm hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n              >\r\n                Create category item\r\n              </button>\r\n            </div> -->\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <style scoped>\r\n  input:checked {\r\n    background-color: #22c55e; /* bg-green-500 */\r\n  }\r\n  \r\n  input:checked ~ span:last-child {\r\n    --tw-translate-x: 1.75rem; /* translate-x-7 */\r\n  }\r\n  .valid {\r\n    border: 3px solid green;\r\n  }\r\n  \r\n  .invalid {\r\n    border: 3px solid red;\r\n  }\r\n  \r\n  #awn-popup-wrapper {\r\n    display: none !important;\r\n  }\r\n  \r\n  .input-w-loading {\r\n    width: 90%;\r\n  }\r\n  img.loading {\r\n    width: 50px;\r\n    display: inline-block;\r\n    margin-left: 10px;\r\n  }\r\n  </style>\r\n  \r\n  <script setup>\r\n  import { Modal } from \"usemodal-vue3\"\r\n  definePageMeta({\r\n    middleware: [\"auth\"],\r\n  })\r\n  const AWN = inject(\"$awn\")\r\n  const config = useRuntimeConfig()\r\n  \r\n  const shouldShowDialog = ref(false)\r\n  const clickdatas = ref([])\r\n  const activeAccount = ref(\r\n  localStorage.getItem(\"activeAccount\")\r\n)\r\n  const projects = ref([])\r\n  const activeProject = ref(0)\r\n  activeProject.value = localStorage.getItem('activeProject') ? parseInt(localStorage.getItem('activeProject')) : 0\r\n\r\n\r\n  // const defUser = JSON.parse(localStorage.getItem(\"user\"));\r\n  let defaultCategory = localStorage.getItem(\"sometraffic_default_category\")\r\n  let defaultGroup = localStorage.getItem(\"sometraffic_default_group\")\r\n  let defaultPriority = localStorage.getItem(\"sometraffic_default_priority\")\r\n  let user = localStorage.getItem(\"user\")\r\n  \r\n  let timestamp = new Date().toLocaleTimeString()\r\n  \r\n  const uniqueUrl = ref(\"\")\r\n  const isLoading = ref(false)\r\n  \r\n  setInterval(() => {\r\n    timestamp = new Date().toLocaleTimeString()\r\n  }, 10)\r\n  \r\n  function isValidUrl(urlString) {\r\n    let urlPattern = new RegExp(\r\n      \"^(https?:\\\\/\\\\/)?\" + // validate protocol\r\n        \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // validate domain name\r\n        \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // validate OR ip (v4) address\r\n        \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // validate port and path\r\n        \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // validate query string\r\n        \"(\\\\#[-a-z\\\\d_]*)?$\",\r\n      \"i\"\r\n    ) // validate fragment locator\r\n  \r\n    return !!urlPattern.test(urlString)\r\n  }\r\n  \r\n  const form = reactive({\r\n  name: \"\",\r\n  description: \"\",\r\n  unique_identifier: \"\",\r\n  ProjectId: \"\",\r\n  createdBy: JSON.parse(user).userName,\r\n  timestamp,\r\n})\r\n  \r\n  const createGroup = async () => {\r\n      const a_data = {\r\n        ProjectId: form.ProjectId,\r\n        createdBy: form.createdBy,\r\n        unique_identifier: form.unique_identifier,\r\n        name: form.name,\r\n        description: form.description,\r\n      }\r\n  \r\n      await useFetch(`${config.API_BASE_URL}groups/create`, {\r\n        method: \"POST\",\r\n        body: a_data,\r\n      })\r\n        .then((result) => {\r\n          if (result.data.value) {\r\n            AWN.success(result.data.value.message)\r\n            uniqueUrl.value = \"\"\r\n            navigateTo(\"/user-groups\")\r\n          }\r\n          if (result.error.value) {\r\n            console.log(\"error value1\", result.error.value.data.message)\r\n            AWN.alert(error)\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error value\", error)\r\n          AWN.alert(\"Unable to create item.\")\r\n        })\r\n  }\r\n  \r\n  const handleSave = async () => {\r\n    let a_data = {\r\n      username: form.username,\r\n      timestamp: new Date(),\r\n      name: form.name,\r\n      unique_identifier: form.unique_identifier,\r\n      description: form.description,\r\n      category: form.category,\r\n      priority: form.priority,\r\n      cat_group: form.group,\r\n      visibility: form.visibility,\r\n      url_1_link: form.url_1_link,\r\n      url_2_txt: form.url_2_txt,\r\n      url_2_link: form.url_2_link,\r\n      plan_frequency: form.plan_frequency,\r\n      automatic_status: form.automatic_status,\r\n    }\r\n  \r\n    await useFetch(`${config.API_BASE_URL}category-items/create`, {\r\n      method: \"POST\",\r\n      body: a_data,\r\n    })\r\n      .then((result) => {\r\n        if (result.data.value) {\r\n          AWN.success(result.data.value.message)\r\n          uniqueUrl.value = \"\"\r\n          navigateTo(\"/category-items\")\r\n        }\r\n        if (result.error.value) {\r\n          console.log(\"error value1\", result.error.value.data.message)\r\n          shouldShowDialog.value = false\r\n          AWN.alert(error)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error value\", error)\r\n        AWN.alert(\"Validation error\")\r\n      })\r\n  }\r\n  \r\n  const getTrackingURL = async () => {\r\n    const { data, error } = await useFetch(\r\n      `${config.API_BASE_URL}groups/gettrackingurl`\r\n    )\r\n    if (data.value) {\r\n      form.unique_identifier = data.value.newTrackingURl\r\n    }\r\n    if (error.value) {\r\n      await AWN.alert(error.value.statusMessage)\r\n    }\r\n  }\r\n  \r\n  const checkUrl = async (link) => {\r\n    isLoading.value = true\r\n    if (isValidUrl(link)) {\r\n      AWN.asyncBlock(\r\n        useFetch(`${config.API_BASE_URL}category-items/all/?url=${link}`),\r\n        (resp) => {\r\n          isLoading.value = false\r\n          if (resp.data && resp.data.value.length) {\r\n            uniqueUrl.value = \"invalid\"\r\n          } else {\r\n            uniqueUrl.value = \"valid\"\r\n          }\r\n        }\r\n      )\r\n    }\r\n  }\r\n  \r\n  const setLoading = () => {\r\n    isLoading.value = true\r\n  }\r\n  \r\n  const copy = async (id) => {\r\n    // Get the text field\r\n    var copyText = document.getElementById(id)\r\n  \r\n    // Select the text field\r\n    copyText.select()\r\n    copyText.setSelectionRange(0, 99999) // For mobile devices\r\n  \r\n    // Copy the text inside the text field\r\n    navigator.clipboard.writeText(copyText.value)\r\n    await AWN.success(copyText.value + \" copied to clipboard!\")\r\n    // Alert the copied text\r\n    //alert(\"Copied the text: \" + copyText.value);\r\n  }\r\n  \r\n  const saveDefault = async (id) => {\r\n    localStorage.setItem(\"sometraffic_default_category\", id)\r\n    await AWN.success(`Standard category set to ${id}.`)\r\n  }\r\n  const saveDefaultGroup = async (id) => {\r\n    localStorage.setItem(\"sometraffic_default_group\", id)\r\n    await AWN.success(`Standard group set to ${id.replace(\"_\", \" \")}.`)\r\n  }\r\n  const saveDefaultPriority = async (id) => {\r\n    localStorage.setItem(\"sometraffic_default_priority\", id)\r\n    await AWN.success(\r\n      `Standard priority set to ${\r\n        id === \"1\" ? \"high\" : id === \"2\" ? \"medium\" : id === \"3\" ? \"low\" : \"\"\r\n      }.`\r\n    )\r\n  }\r\n  \r\n  const setClickDatas = async () => {\r\n    const { data: data } = await useFetch(\r\n      `${config.API_BASE_URL}groups/all?userid=${JSON.parse(user).userId}`\r\n    )\r\n    clickdatas.value = data.value\r\n  }\r\n\r\n  const setProjects = async () => {\r\n  const { data: data } = await useFetch(\r\n    `${config.API_BASE_URL}projects/all?AccountId=${activeAccount.value}`\r\n  )\r\n  projects.value = data.value\r\n  form.ProjectId = activeProject.value\r\n}\r\n  onBeforeMount(setProjects)\r\n  onBeforeMount(setClickDatas)\r\n  onBeforeMount(getTrackingURL)\r\n  \r\n  // onMounted(() => {\r\n  //   document.addEventListener(\"keydown\", (event) => {\r\n  //     // event.keyCode or event.which  property will have the code of the pressed key\r\n  //     let keyCode = event.keyCode ? event.keyCode : event.which;\r\n  \r\n  //     // 13 points the enter key, 16 points the shift key\r\n  //     if (event.altKey && keyCode === 67) {\r\n  //       getTrackingURL();\r\n  \r\n  //       form.username = JSON.parse(user).userName;\r\n  //       form.timestamp = new Date().toLocaleTimeString();\r\n  //       form.description = \"\";\r\n  //       form.category = \"\";\r\n  //       form.name = \"\";\r\n  \r\n  //       form.group = \"all\";\r\n  //       form.priority = \"\";\r\n  //       form.visibility = \"low\";\r\n  //       form.url_1_link = \"\";\r\n  //       form.url_2_txt = \"\";\r\n  //       form.url_2_link = \"\";\r\n  //       form.plan_frequency = \"\";\r\n  //       form.automatic_status = \"\";\r\n  //     }\r\n  //   });\r\n  // });\r\n  </script>\r\n  "],"names":["error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAoQA,UAAA,MAAA,OAAA,MAAA;AACA,UAAA,SAAA,iBAAA;AAEA,UAAA,mBAAA,IAAA,KAAA;AACA,QAAA,CAAA,CAAA;AACA;AAAA,MACA,aAAA,QAAA,eAAA;AAAA,IACA;AACA,UAAA,WAAA,IAAA,EAAA;AACA,UAAA,gBAAA,IAAA,CAAA;AACA,kBAAA,QAAA,aAAA,QAAA,eAAA,IAAA,SAAA,aAAA,QAAA,eAAA,CAAA,IAAA;AAIA,iBAAA,QAAA,8BAAA;AACA,iBAAA,QAAA,2BAAA;AACA,iBAAA,QAAA,8BAAA;AACA,QAAA,OAAA,aAAA,QAAA,MAAA;AAEA,QAAA,YAAA,IAAA,KAAA,EAAA,mBAAA;AAEA,UAAA,YAAA,IAAA,EAAA;AACA,QAAA,KAAA;AAEA,gBAAA,MAAA;AACA,kBAAA,IAAA,KAAA,EAAA,mBAAA;AAAA,IACA,GAAA,EAAA;AAgBA,UAAA,OAAA,SAAA;AAAA,MACA,MAAA;AAAA,MACA,aAAA;AAAA,MACA,mBAAA;AAAA,MACA,WAAA;AAAA,MACA,WAAA,KAAA,MAAA,IAAA,EAAA;AAAA,MACA;AAAA,IACA,CAAA;AAgCA,UAAA,aAAA,YAAA;AACA,UAAA,SAAA;AAAA,QACA,UAAA,KAAA;AAAA,QACA,WAAA,IAAA,KAAA;AAAA,QACA,MAAA,KAAA;AAAA,QACA,mBAAA,KAAA;AAAA,QACA,aAAA,KAAA;AAAA,QACA,UAAA,KAAA;AAAA,QACA,UAAA,KAAA;AAAA,QACA,WAAA,KAAA;AAAA,QACA,YAAA,KAAA;AAAA,QACA,YAAA,KAAA;AAAA,QACA,WAAA,KAAA;AAAA,QACA,YAAA,KAAA;AAAA,QACA,gBAAA,KAAA;AAAA,QACA,kBAAA,KAAA;AAAA,MACA;AAEA,YAAA,SAAA,GAAA,OAAA,qCAAA;AAAA,QACA,QAAA;AAAA,QACA,MAAA;AAAA,MACA,GAAA,aAAA,EACA,KAAA,CAAA,WAAA;AACA,YAAA,OAAA,KAAA,OAAA;AACA,cAAA,QAAA,OAAA,KAAA,MAAA,OAAA;AACA,oBAAA,QAAA;AACA,qBAAA,iBAAA;AAAA,QACA;AACA,YAAA,OAAA,MAAA,OAAA;AACA,kBAAA,IAAA,gBAAA,OAAA,MAAA,MAAA,KAAA,OAAA;AACA,2BAAA,QAAA;AACA,cAAA,MAAA,KAAA;AAAA,QACA;AAAA,MACA,CAAA,EACA,MAAA,CAAAA,WAAA;AACA,gBAAA,IAAA,eAAAA,MAAA;AACA,YAAA,MAAA,kBAAA;AAAA,MACA,CAAA;AAAA,IACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
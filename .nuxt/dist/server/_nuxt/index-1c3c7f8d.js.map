{"version":3,"file":"index-1c3c7f8d.js","sources":["../../../../pages/admin-settings/index.vue"],"sourcesContent":["<template>\r\n    <div class=\"flex flex-col\">\r\n        <div class=\"flex mb-4\">\r\n            <h1 class=\"font-bold\">Admin settings</h1>\r\n        </div>\r\n        <hr>\r\n        <div class=\"flex flex-col mt-4 p-8 gap-y-4\">\r\n            <label for=\"download\">Backup database</label>\r\n            <hr class=\"border-gray-300\">\r\n            <button name=\"download\" class=\"mb-8 text-black cursor-pointer w-fit px-4 py-2 rounded-md bg-gray-400 hover:bg-gray-600 transition\" @click=\"downloadDb()\"\r\n                >Download Database</button\r\n              >\r\n              <label>Account</label>\r\n              <hr class=\"border-gray-300\">\r\n                <div class=\"flex\">\r\n                  <div class=\"basis-2/5  \">\r\n                    <div id=\"account-selector\" class=\"relative\">\r\n              <div @click=\"showProjectsList = !showProjectsList\" class=\"rounded-md cursor-pointer relative flex bg-white p-3 w-3/5 text-black\">\r\n                <button type=\"button\">{{ accounts.length ? accounts.find(account => account.id == activeAccount) ? accounts.find(account => account.id == activeAccount).name : 'select account' : '' }}</button>\r\n                <span :class=\"{ 'rotate-180': showProjectsList }\" class=\"absolute right-3 top-1/2 -translate-y-1\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"14px\" viewBox=\"0 0 960 560\" enable-background=\"new 0 0 960 560\" xml:space=\"preserve\">\r\n  <g id=\"Rounded_Rectangle_33_copy_4_1_\">\r\n  \t<path d=\"M480,344.181L268.869,131.889c-15.756-15.859-41.3-15.859-57.054,0c-15.754,15.857-15.754,41.57,0,57.431l237.632,238.937   c8.395,8.451,19.562,12.254,30.553,11.698c10.993,0.556,22.159-3.247,30.555-11.698l237.631-238.937   c15.756-15.86,15.756-41.571,0-57.431s-41.299-15.859-57.051,0L480,344.181z\"/>\r\n  </g>\r\n                </svg></span>\r\n              </div>\r\n              <div v-show=\"showProjectsList\" class=\"absolute overflow-y-auto max-h-96 -right-2 top-0  flex flex-col gap-y-4 bg-white rounded-md p-4 text-black\">\r\n                <div class=\"flex flex-col gap-y-2\" v-for=\"(account, index) in accounts\" :key=\"account.id\">\r\n                  <button type=\"button\" @click=\"setAccount(account.id)\">{{ account.name }}</button>\r\n                  <hr :class=\"{ 'border-black': index + 1 === accounts.length }\">\r\n                </div>\r\n                <button class=\"text-center cursor-pointer\" @click=\"navigateTo('/accounts/add'); showProjectsList = false;\">+ Add an account</button>\r\n                <hr>\r\n                <button class=\"text-center cursor-pointer\" @click=\"navigateTo('/accounts'); showProjectsList = false;\">View accounts list</button>\r\n              </div>\r\n            </div>\r\n            </div>\r\n                </div>\r\n\r\n                <label>Emails</label>\r\n            <hr class=\"border-gray-300\">\r\n            <nuxt-link to=\"emails\" class=\"text-black cursor-pointer w-fit px-4 py-2 rounded-md bg-gray-400 hover:bg-gray-600 transition\"\r\n                >Emails settings</nuxt-link\r\n              >\r\n\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n<script setup>\r\ndefinePageMeta({\r\n  middleware: [\"admin\"],\r\n});\r\n\r\nimport moment from \"moment-timezone\";\r\n\r\nconst config = useRuntimeConfig();\r\nconst db_name = moment(new Date()).format(\"YYYY-MM-DD-HH_mm\");\r\nconst full_db_name = `sometraffic-${db_name}`;\r\nconst AWN = inject(\"$awn\");\r\nconst accounts = ref([])\r\nconst activeAccount = ref(localStorage.getItem('activeAccount'))\r\nconst showProjectsList = ref(false);\r\n\r\nconst setAccount = (id) => {\r\n  showProjectsList.value = false;\r\n  const activeAccount = accounts.value.find(account => account.id === parseInt(id)) \r\n  localStorage.removeItem('activeProject')\r\n  localStorage.setItem('activeAccount', activeAccount.id)\r\n  localStorage.setItem('activeAccountData', JSON.stringify(activeAccount))\r\n  const router = useRouter()\r\n  router.go()\r\n}\r\n\r\nconst setAccounts = async () => {\r\n  const { data: data } = await useFetch(`${config.API_BASE_URL}accounts/all`)\r\n  accounts.value = data.value\r\n}\r\n\r\n\r\n\r\nconst downloadDb = () => {\r\n  const link = document.createElement(\"a\");\r\n  link.href = `${config.API_BASE_URL}files/sometraffic.sql`;\r\n  link.download = full_db_name;\r\n  link.target = \"_blank\";\r\n  link.click();\r\n};\r\n\r\nconst setActiveAccount = (e) => {\r\n    const id = e.target.value\r\n    const accountName = e.target.selectedOptions[0].innerText\r\n    const activeAccount = accounts.value.find(account => account.id === parseInt(id)) \r\n    localStorage.removeItem('activeProject')\r\n    localStorage.setItem('activeAccount', activeAccount.id)\r\n    localStorage.setItem('activeAccountData', JSON.stringify(activeAccount))\r\n    AWN.success(`Active account changed to ${accountName}`);\r\n    const router = useRouter()\r\n    router.go()\r\n}\r\nonBeforeMount(setAccounts)\r\nonMounted(() => {\r\n  document.addEventListener(\"click\", function(evt) {\r\n        let accountEl = document.getElementById('account-selector'),\r\n          targetEl = evt.target; // clicked element      \r\n        do {\r\n          if(targetEl == accountEl) {\r\n            // This is a click inside, does nothing, just return.\r\n            return;\r\n          }\r\n          // Go up the DOM\r\n          targetEl = targetEl.parentNode;\r\n        } while (targetEl);\r\n        // This is a click outside.\r\n        showProjectsList.value = false\r\n      });\r\n}\r\n  );\r\n\r\n</script>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuDA,qBAAA;AACA,WAAA,IAAA,KAAA,CAAA,EAAA,OAAA,kBAAA;AAEA,WAAA,MAAA;AACA,UAAA,WAAA,IAAA,EAAA;AACA,UAAA,gBAAA,IAAA,aAAA,QAAA,eAAA,CAAA;AACA,UAAA,mBAAA,IAAA,KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
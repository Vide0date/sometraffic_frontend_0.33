{"version":3,"file":"index-f19cbd18.js","sources":["../../../../pages/admin-settings/index.vue"],"sourcesContent":["<template>\r\n    <div class=\"flex flex-col\">\r\n        <div class=\"flex mb-4\">\r\n            <h1 class=\"font-bold\">Admin settings</h1>\r\n        </div>\r\n        <hr>\r\n        <div class=\"flex flex-col mt-4 p-8 gap-y-4\">\r\n            <label for=\"download\">Backup database</label>\r\n            <hr class=\"border-gray-300\">\r\n            <button name=\"download\" class=\"mb-8 text-black cursor-pointer w-fit px-4 py-2 rounded-md bg-gray-400 hover:bg-gray-600 transition\" @click=\"downloadDb()\"\r\n                >Download Database</button\r\n              >\r\n\r\n                <label>Emails</label>\r\n            <hr class=\"border-gray-300\">\r\n            <nuxt-link to=\"emails\" class=\"text-black cursor-pointer w-fit px-4 py-2 rounded-md bg-gray-400 hover:bg-gray-600 transition\"\r\n                >Emails settings</nuxt-link\r\n              >\r\n\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n<script setup>\r\ndefinePageMeta({\r\n  middleware: [\"admin\"],\r\n});\r\n\r\nimport moment from \"moment-timezone\";\r\n\r\nconst config = useRuntimeConfig();\r\nconst db_name = moment(new Date()).format(\"YYYY-MM-DD-HH_mm\");\r\nconst full_db_name = `sometraffic-${db_name}`;\r\nconst AWN = inject(\"$awn\");\r\nconst accounts = ref([])\r\nconst activeAccount = ref(localStorage.getItem('activeAccount'))\r\nconst showAccountsList = ref(false);\r\n\r\nconst setAccount = (id) => {\r\n  showAccountsList.value = false;\r\n  const activeAccount = accounts.value.find(account => account.id === parseInt(id)) \r\n  localStorage.removeItem('activeProject')\r\n  localStorage.setItem('activeAccount', activeAccount.id)\r\n  localStorage.setItem('activeAccountData', JSON.stringify(activeAccount))\r\n  const router = useRouter()\r\n  router.go()\r\n}\r\n\r\nconst setAccounts = async () => {\r\n  const { data: data } = await useFetch(`${config.API_BASE_URL}accounts/all`)\r\n  accounts.value = data.value\r\n}\r\n\r\n\r\n\r\nconst downloadDb = () => {\r\n  const link = document.createElement(\"a\");\r\n  link.href = `${config.API_BASE_URL}files/sometraffic.sql`;\r\n  link.download = full_db_name;\r\n  link.target = \"_blank\";\r\n  link.click();\r\n};\r\n\r\nconst setActiveAccount = (e) => {\r\n    const id = e.target.value\r\n    const accountName = e.target.selectedOptions[0].innerText\r\n    const activeAccount = accounts.value.find(account => account.id === parseInt(id)) \r\n    localStorage.removeItem('activeProject')\r\n    localStorage.setItem('activeAccount', activeAccount.id)\r\n    localStorage.setItem('activeAccountData', JSON.stringify(activeAccount))\r\n    AWN.success(`Active account changed to ${accountName}`);\r\n    const router = useRouter()\r\n    router.go()\r\n}\r\nonBeforeMount(setAccounts)\r\nonMounted(() => {\r\n  document.addEventListener(\"click\", function(evt) {\r\n        let accountEl = document.getElementById('account-selector'),\r\n          targetEl = evt.target; // clicked element      \r\n        do {\r\n          if(targetEl == accountEl) {\r\n            // This is a click inside, does nothing, just return.\r\n            return;\r\n          }\r\n          // Go up the DOM\r\n          targetEl = targetEl.parentNode;\r\n        } while (targetEl);\r\n        // This is a click outside.\r\n        showAccountsList.value = false\r\n      });\r\n}\r\n  );\r\n\r\n</script>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AA8BA,qBAAA;AACA,WAAA,IAAA,KAAA,CAAA,EAAA,OAAA,kBAAA;AAEA,WAAA,MAAA;AACA,QAAA,EAAA;AACA,QAAA,aAAA,QAAA,eAAA,CAAA;AACA,QAAA,KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}